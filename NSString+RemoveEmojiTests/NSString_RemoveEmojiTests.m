#import <XCTest/XCTest.h>

#import "NSString+RemoveEmoji.h"

@interface NSString_RemoveEmojiTests : XCTestCase

@end

@implementation NSString_RemoveEmojiTests

- (void)testHasEmoji {
	XCTAssertFalse([@"Party Hard" isIncludingEmoji]);
	XCTAssert([@"‚ú®" isIncludingEmoji]);
	XCTAssert([@"‚ú®Party‚ú® ‚ú®Hard‚ú®" isIncludingEmoji]);
}

- (void)testRemovedEmojiString {
	XCTAssert([[@"Party Hard" removedEmojiString] isEqualToString:@"Party Hard"]);
	XCTAssert([[@"‚ú®" removedEmojiString] isEqualToString:@""]);
	XCTAssert([[@"‚ú®Party‚ú® ‚ú®Hard‚ú®" removedEmojiString] isEqualToString:@"Party Hard"]);
}

- (void)testHasSurrogate {
	XCTAssertFalse([@"Business Professional ‚ò∫Ô∏è" isIncludingSurrogatePair]);
	XCTAssert([@"üåç" isIncludingSurrogatePair]);
	XCTAssert([@"üåçBusiness Professional ‚ò∫Ô∏è" isIncludingSurrogatePair]);
}

- (void)testRemovedSurrogateString {
	XCTAssert([[@"Business Professional ‚ò∫Ô∏è" removedSurrogatePairString] isEqualToString:@"Business Professional ‚ò∫Ô∏è"]);
	XCTAssert([[@"üåç" removedSurrogatePairString] isEqualToString:@""]);
	XCTAssert([[@"üåçBusiness Professional ‚ò∫Ô∏è" removedSurrogatePairString] isEqualToString:@"Business Professional ‚ò∫Ô∏è"]);
}

- (void)testFirstNonSurrogatePairEmojiIsNotSurrogatePair {
	NSString* unicodeString = [NSString stringWithUTF8String:"\U00002100"]; // ‚ÑÄ
	XCTAssertFalse([unicodeString isIncludingSurrogatePair]);
	XCTAssertFalse([[unicodeString removedSurrogatePairString] isEqualToString:@""]);
	XCTAssert([unicodeString isIncludingEmoji]);
}

- (void)testLastNonSurrogatePairEmojiIsNotSurrogatePair {
	NSString* unicodeString = [NSString stringWithUTF8String:"\U000027BF"]; // ‚ûø
	XCTAssertFalse([unicodeString isIncludingSurrogatePair]);
	XCTAssertFalse([[unicodeString removedSurrogatePairString] isEqualToString:@""]);
	XCTAssert([unicodeString isIncludingEmoji]);
}

- (void)testLastNonSurrogateCharacterIsNotSurrogatePair {
	NSString* unicodeString = [NSString stringWithUTF8String:"\U0000D7FF"]; // Ìüø
	XCTAssertFalse([unicodeString isIncludingSurrogatePair]);
	XCTAssertFalse([[unicodeString removedSurrogatePairString] isEqualToString:@""]);
	XCTAssertFalse([unicodeString isIncludingEmoji]);
}

- (void)testFirstSurrogatePairUnicodeCharacterIsSurrogatePair {
	NSString* unicodeString = [NSString stringWithUTF8String:"\U0000E000"]; // ÓÄÄ
	XCTAssert([unicodeString isIncludingSurrogatePair]);
	XCTAssert([[unicodeString removedSurrogatePairString] isEqualToString:@""]);
	XCTAssertFalse([unicodeString isIncludingEmoji]);
}

- (void)testFirstThreeByteUnicodeCharacterIsSurrogatePair {
	NSString* unicodeString = [NSString stringWithUTF8String:"\U00010000"]; // êÄÄ
	NSLog(@"\n\nUnicode: %@\n\n",unicodeString);
	XCTAssert([unicodeString isIncludingSurrogatePair]);
	XCTAssert([[unicodeString removedSurrogatePairString] isEqualToString:@""]);
	XCTAssertFalse([unicodeString isIncludingEmoji]);
}

- (void)testLowestUnicodeValueEmojiIsSurrogatePair {
	NSString* unicodeString = [NSString stringWithUTF8String:"\U0001F004"]; // üÄÑÔ∏è
	XCTAssert([unicodeString isIncludingSurrogatePair]);
	XCTAssert([[unicodeString removedSurrogatePairString] isEqualToString:@""]);
	XCTAssert([unicodeString isIncludingEmoji]);
}

@end
